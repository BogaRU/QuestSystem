// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuestSystem.Infrastructure.Data;

#nullable disable

namespace QuestSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241013183055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuestSystem.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Money")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.PlayerItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.PlayerQuest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("QuestId");

                    b.ToTable("PlayerQuests");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.Quest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MinimumLevel")
                        .HasColumnType("integer");

                    b.Property<Guid[]>("RequiredCompletedQuests")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.QuestReward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<Guid[]>("ItemIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid?>("QuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.ToTable("QuestReward");
                });

            modelBuilder.Entity("QuestSystem.Domain.ValueObjects.QuestCondition", b =>
                {
                    b.Property<int>("RequiredAmount")
                        .HasColumnType("integer");

                    b.Property<Guid[]>("RequiredItemIds")
                        .HasColumnType("uuid[]");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.ToTable("QuestCondition");
                });

            modelBuilder.Entity("QuestSystem.Domain.ValueObjects.QuestProgress", b =>
                {
                    b.Property<int>("CollectedItems")
                        .HasColumnType("integer");

                    b.Property<int>("DefeatedMonsters")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnoughItems")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnoughLocations")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnoughMonsters")
                        .HasColumnType("boolean");

                    b.Property<int>("VisitedLocations")
                        .HasColumnType("integer");

                    b.ToTable("QuestProgress");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.PlayerItem", b =>
                {
                    b.HasOne("QuestSystem.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestSystem.Domain.Entities.Player", "Player")
                        .WithMany("PlayerItems")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.PlayerQuest", b =>
                {
                    b.HasOne("QuestSystem.Domain.Entities.Player", "Player")
                        .WithMany("PlayerQuests")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestSystem.Domain.Entities.Quest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.QuestReward", b =>
                {
                    b.HasOne("QuestSystem.Domain.Entities.Quest", null)
                        .WithMany("Rewards")
                        .HasForeignKey("QuestId");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.Player", b =>
                {
                    b.Navigation("PlayerItems");

                    b.Navigation("PlayerQuests");
                });

            modelBuilder.Entity("QuestSystem.Domain.Entities.Quest", b =>
                {
                    b.Navigation("Rewards");
                });
#pragma warning restore 612, 618
        }
    }
}
